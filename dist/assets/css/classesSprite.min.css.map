{"version":3,"sources":["classesSprite.styl","../../../tmp/sprite.styl","classesSprite.css"],"names":[],"mappings":"AAQA,I,CCyEE,YARA,YCpEE,2CFMJ,uB,CEFA,O,CAEI,YACA,YAEA,2CACA,2B","file":"classesSprite.min.css","sourcesContent":[null,"/*\nStylus variables are information about icon's compiled state, stored under its original file name\n\n.icon-home {\n  width: $icon_home_width;\n}\n\nThe large array-like variables contain all information about a single icon\n$icon_home = x y offset_x offset_y width height total_width total_height image_path;\n\nAt the bottom of this section, we provide information about the spritesheet itself\n$spritesheet = width height image $spritesheet_sprites;\n*/\n$app_name = 'app';\n$app_x = 0px;\n$app_y = 0px;\n$app_offset_x = 0px;\n$app_offset_y = 0px;\n$app_width = 129px;\n$app_height = 42px;\n$app_total_width = 129px;\n$app_total_height = 92px;\n$app_image = '../images/sprite.png';\n$app = 0px 0px 0px 0px 129px 42px 129px 92px '../images/sprite.png' 'app';\n$google_name = 'google';\n$google_x = 0px;\n$google_y = 50px;\n$google_offset_x = 0px;\n$google_offset_y = -50px;\n$google_width = 128px;\n$google_height = 42px;\n$google_total_width = 129px;\n$google_total_height = 92px;\n$google_image = '../images/sprite.png';\n$google = 0px 50px 0px -50px 128px 42px 129px 92px '../images/sprite.png' 'google';\n$spritesheet_width = 129px;\n$spritesheet_height = 92px;\n$spritesheet_image = '../images/sprite.png';\n$spritesheet_sprites = $app $google;\n$spritesheet = 129px 92px '../images/sprite.png' $spritesheet_sprites;\n\n// These \"retina group\" variables are mappings for the naming and pairing of normal and retina sprites.\n\n// The list formatted variables are intended for mixins like `retinaSprite` and `retinaSprites`.\n\n\n/*\nThe provided mixins are intended to be used with the array-like variables\n\n.icon-home {\n  spriteWidth($icon_home)\n}\n\n.icon-email {\n  sprite($icon_email)\n}\n\nExample usage in HTML:\n\n`display: block` sprite:\n<div class=\"icon-home\"></div>\n\nTo change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\n\n// CSS\n.icon {\n  display: inline-block;\n}\n\n// HTML\n<i class=\"icon icon-home\"></i>\n*/\nspriteWidth($sprite) {\n  width: $sprite[4];\n}\n\nspriteHeight($sprite) {\n  height: $sprite[5];\n}\n\nspritePosition($sprite) {\n  background-position: $sprite[2] $sprite[3];\n}\n\nspriteImage($sprite) {\n  background-image: url($sprite[8]);\n}\n\nsprite($sprite) {\n  spriteImage($sprite)\n  spritePosition($sprite)\n  spriteWidth($sprite)\n  spriteHeight($sprite)\n}\n\n\n// The `retinaSprite` mixin sets up rules and a media query for a sprite/retina sprite.\n// It should be used with a \"retina group\" variable.\n//\n// The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/\n//\n// $icon_home_group = 'icon-home' $icon_home $icon_home_2x;\n//\n// .icon-home {\n// \tretinaSprite($icon_home_group)\n// }\n\n\nspriteBackgroundSize($sprite) {\n\tbackground-size $sprite[6] $sprite[7]\n}\n\nretinaSprite($retina_group) {\n\t$normal_sprite = $retina_group[1]\n\t$retina_sprite = $retina_group[2]\n\tsprite($normal_sprite)\n\n\t@media (-webkit-min-device-pixel-ratio: 2),\n\t\t\t\t (min-resolution: 192dpi) {\n\t\tspriteImage($retina_sprite)\n\t\tspriteBackgroundSize($normal_sprite)\n\t}\n}\n\n/*\nThe `sprites` mixin generates identical output to the CSS template\n  but can be overridden inside of Stylus\n\nThis must be run when you have at least 2 sprites.\n  If run with a single sprite, then there will be reference errors.\n\nsprites($spritesheet_sprites);\n*/\nsprites($sprites) {\n  for $sprite in $sprites {\n    $sprite_name = $sprite[9];\n    .{$sprite_name} {\n      sprite($sprite);\n    }\n  }\n}\n\n// The `retinaSprites` mixin generates a CSS rule and media query for retina groups\n// This yields the same output as CSS retina template but can be overridden in Stylus\n//\n// retinaSprites($retina_groups)\n\nretinaSprites($retina_groups) {\n\tfor $retina_group in $retina_groups {\n\t\t$sprite_name = $retina_group[0];\n\t\t.{$sprite_name} {\n\t\t\tretinaSprite $retina_group\n\t\t}\n\t}\n}\n",".app\n{\n    width: 129px;\n    height: 42px;\n\n    background-image: url('../images/sprite.png');\n    background-position: 0 0;\n}\n\n.google\n{\n    width: 128px;\n    height: 42px;\n\n    background-image: url('../images/sprite.png');\n    background-position: 0 -50px;\n}\n"]}